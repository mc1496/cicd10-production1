
version: 2.1

# we can also use  few chars ${CIRCLE_WORKFLOW_ID:0:5}
# sample CIRCLE_WORKFLOW_ID 878feef3-5126-4468-957e-6c2bcedf454f
commands:
  destroy_failed_bucket:
    steps:
      - run:
          name: Destroy S3-Bucket
          when: on_fail
          command: |
            # aws cloudformation delete-stack \
            # --stack-name xam-bkt-${CIRCLE_CI_WORKFLOW_ID} \
            # --region=us-east-1
            # echo "WAIT..."
            # aws cloudformation wait stack-delete-complete \
            # --stack-name xam-bkt-${CIRCLE_CI_WORKFLOW_ID} \
            # echo "FAILED S3 stack is deleted."
            ./delete.sh "xam-bkt-${CIRCLE_WORKFLOW_ID:0:7}"
  destroy_failed_distro:
    steps:
      - run:
          name: Destroy CloudFront-Distro
          when: on_fail
          command: |
            # aws cloudformation delete-stack \
            # --stack-name xam-distro-${CIRCLE_CI_WORKFLOW_ID} \
            # --region=us-east-1
            # echo "WAIT..."
            # aws cloudformation wait stack-delete-complete \
            # --stack-name xam-distro-${CIRCLE_CI_WORKFLOW_ID} \
            # echo "FAILED DISTRO stack is deleted."
            ./delete.sh "xam-distro"            

  # print_pipeline_id:
  #   description: "print_pipeline_id"
  #   parameters:
  #     to:
  #       type: string
  #       default: "CIRCLE_WORKFLOW_ID"
  #   steps:
  #     - run: echo << parameters.to >>

executors:
  my-executor:
    docker:
      - image: cimg/aws:2022.11 # or amazon/aws-cli
    #     auth:
    #       username: mydockerhub-user
    #       password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    # working_directory: /tmp

jobs:
 # Fetch and save the pipeline ID (bucket ID) responsible for the last release.
  get_last_deployment_id:
    executor: my-executor
    steps:
      - checkout      
      - run:
          name: Fetch and save the old pipeline ID (bucket name) responsible for the last release.
          #aws cloudformation list-exports --query "Exports[?Name=='PipelineID'].Value" --output text
          command: |
            aws cloudformation list-exports \
            --query "Exports[?Name==\`PipelineID\`].Value" \
            --no-paginate \
            --output text > ~/textfile.txt
      - persist_to_workspace:
          root: ~/
          paths: 
            - textfile.txt
  del_last_deployment:
    executor: my-executor
    steps:
      - checkout
      #- run: yum install -y tar gzip
      - attach_workspace:
          at: ~/
      - run:
          name: Destroy the previous production version's S3 bucket and CloudFormation stack. 
          # Use $OldBucketID environment variable or mybucket644752792305 below.
          # Similarly, you can create and use $OldStackID environment variable in place of production-distro 
          command: |
            export Old_PipelineID=$(cat ~/textfile.txt)
            ###########################################
            # aws cloudformation delete-stack \
            # --stack-name xam-distro-${Old_PipelineID} \
            # --region=us-east-1
            # echo "WAIT..."
            # aws cloudformation wait stack-delete-complete \
            # --stack-name xam-distro-${Old_PipelineID} \
            # echo "OLD Cloudfront DISTRO stack is deleted."
            #./delete.sh xam-distro
            ################################################
            aws s3 rm "s3://${Old_PipelineID}" --recursive
            ################################################
            # aws cloudformation delete-stack \
            # --stack-name xam-bkt-${Old_PipelineID} \
            # --region=us-east-1
            # echo "WAIT..."
            # aws cloudformation wait stack-delete-complete \
            # --stack-name xam-bkt-${Old_PipelineID} \
            # echo "OLD S3 stack is deleted."
            ./delete.sh xam-bkt-${Old_PipelineID}
  create_s3_bucket:
    executor: my-executor
    steps:
      - checkout
      - run:
          name: Execute bucket.yml - Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name xam-bkt-${CIRCLE_WORKFLOW_ID:0:7} \
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID:0:7}" \
            --tags project=XAM
      - destroy_failed_bucket

  upload_website_to_s3:
    executor: my-executor
    steps:
      - checkout
      - run:
          name: Upload Website files to S3 bucket
          command: |
            aws s3 sync ./website s3://"${CIRCLE_WORKFLOW_ID:0:7}" --delete
      - run:
          name: pull back (delete S3 file) if failed
          when: on_fail
          command: |
            aws s3 rm "s3://${CIRCLE_WORKFLOW_ID:0:7}" --recursive          
      - destroy_failed_bucket
  
  create_distro:
    executor: my-executor
    steps:
      - checkout
      - run:
          name: Execute cloudfront.yml
          command: |
            aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name xam-distro \
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID:0:7}" \
            --tags project=XAM
      #- destroy_failed_distro
      - run:
          name: pull back (delete S3 file) if failed
          when: on_fail
          command: |
            aws s3 rm "s3://${CIRCLE_WORKFLOW_ID:0:7}" --recursive          
      - destroy_failed_bucket
  

workflows:
  btd:
    jobs:      
      - create_s3_bucket          
      - upload_website_to_s3:
          requires:
            - create_s3_bucket
      - get_last_deployment_id:
          requires:
            - upload_website_to_s3
      - create_distro:
          requires:
            - get_last_deployment_id      
      - del_last_deployment:
          requires:
            - create_distro

# VS Code Extension Version: 1.4.0